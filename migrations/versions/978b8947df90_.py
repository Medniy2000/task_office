"""empty message

Revision ID: 978b8947df90
Revises: 2c4e91200810
Create Date: 2020-02-01 10:55:06.021809

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "978b8947df90"
down_revision = "2c4e91200810"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "columns",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", postgresql.UUID(), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("board_uuid", postgresql.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["board_uuid"], ["boards.uuid"]),
        sa.PrimaryKeyConstraint("id", "uuid"),
        sa.UniqueConstraint(
            "board_uuid", "name", name="unique_board__board_column_name"
        ),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", postgresql.UUID(), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("expire_at", sa.DateTime(), nullable=True),
        sa.Column("label", sa.String(length=80), nullable=True),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("description", sa.String(length=120), nullable=False),
        sa.Column("state", sa.Integer(), nullable=True),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("column_uuid", postgresql.UUID(), nullable=False),
        sa.Column("creator_uuid", postgresql.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["column_uuid"], ["columns.uuid"]),
        sa.ForeignKeyConstraint(["creator_uuid"], ["users.uuid"]),
        sa.PrimaryKeyConstraint("id", "uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "users_tasks",
        sa.Column("task_uuid", postgresql.UUID(), nullable=False),
        sa.Column("user_uuid", postgresql.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["task_uuid"], ["tasks.uuid"]),
        sa.ForeignKeyConstraint(["user_uuid"], ["users.uuid"]),
        sa.PrimaryKeyConstraint("task_uuid", "user_uuid"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_tasks")
    op.drop_table("tasks")
    op.drop_table("columns")
    # ### end Alembic commands ###
